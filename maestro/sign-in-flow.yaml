# ShelfControl App - Sign In Flow Test
# This test launches the app, checks if user is already signed in,
# signs out if necessary, then performs a complete sign-in flow

appId: ${APP_ID}
name: "ShelfControl Sign In Flow"
tags:
  - auth
  - critical


---
# Launch the app with fresh state
- launchApp:
    appId: ${APP_ID}

# Wait for app to fully load
- extendedWaitUntil:
    visible: "ShelfControl"
    timeout: 10000

# Handle development server screen (if in dev mode)
- runFlow:
    when:
      visible: "Development servers"
    commands:
      # Tap on localhost development server
      - tapOn:
          text: "http://localhost:8081"
      # Handle potential developer menu popup
      - runFlow:
          when:
            visible: "Continue"
          commands:
            - tapOn: "Continue"

# Check if we're already on a signed-in screen (Profile page)
# If user is already signed in, navigate to profile and sign out first
- runFlow:
    when:
      visible: 
        id: "profile-tab"
    commands:
      - tapOn: 
          id: "profile-tab"
      # Wait for profile page to load
      - extendedWaitUntil:
          visible: "Profile"
          timeout: 5000
      # Scroll down to find sign out button
      - scroll
      - scroll
      # Look for and tap sign out button
      - tapOn:
          text: "Sign Out"

      # Wait for and handle confirmation dialog
      - extendedWaitUntil:
          visible: "Are you sure you want to sign out?"
          timeout: 3000

      # Tap the confirmation "Sign Out" button in the dialog
      - tapOn:
          text: "Sign Out"
          index: 1
      # Wait for sign out to complete
      - extendedWaitUntil:
          visible: "Sign in"
          timeout: 5000

# Alternative check: if we see authenticated content, navigate out
- runFlow:
    when:
      visible:
        text: "My Deadlines"
    commands:
      # Navigate to profile to sign out
      - tapOn:
          id: "profile-tab"
      - scroll
      - tapOn:
          text: "Sign Out"

      # Wait for and handle confirmation dialog
      - extendedWaitUntil:
          visible: "Are you sure you want to sign out?"
          timeout: 3000

      # Tap the confirmation "Sign Out" button in the dialog
      - tapOn:
          text: "Sign Out"
          index: 1

# Now we should be on the sign-in screen
- extendedWaitUntil:
    visible: "Sign in"
    timeout: 5000

# Clear any existing text in email field and enter test email
- tapOn:
    id: "email-input"
- eraseText
- inputText: ${TEST_EMAIL}

# Hide keyboard if it's covering other elements
- hideKeyboard

# Clear password field and enter test password
- tapOn:
    id: "password-input"
- eraseText
- inputText: ${TEST_PASSWORD}

# Hide keyboard before proceeding
- hideKeyboard

# Verify sign in button is visible and enabled
- assertVisible:
    id: "sign-in-button"

# Take screenshot before sign in attempt
- takeScreenshot:
    path: maestro/screenshots/01_before_sign_in

# Tap the sign in button
- tapOn:
    id: "sign-in-button"

# Handle potential loading state
- runFlow:
    when:
      visible: "Signing in..."
    commands:
      # Wait for loading to complete
      - extendedWaitUntil:
          notVisible: "Signing in..."
          timeout: 10000

# Handle potential error messages
- runFlow:
    when:
      visible: "Invalid credentials"
    commands:
      - takeScreenshot:
          path: maestro/screenshots/02_sign_in_error
      - stopApp
      - assertTrue: false  # This will fail the test

- runFlow:
    when:
      visible: "Network error"
    commands:
      - takeScreenshot:
          path: maestro/screenshots/03_network_error
      - stopApp
      - assertTrue: false  # This will fail the test

# Verify successful sign in by checking for authenticated content
# After sign-in, user should land on index page
- extendedWaitUntil:
    visible: "Today's Reading Goals"
    timeout: 15000

# Additional verification - look for the date header to confirm we're on dashboard
- extendedWaitUntil:
    visible: "TODAY'S READING GOALS"
    timeout: 3000

# Take screenshot of successful sign in
- takeScreenshot:
    path: maestro/screenshots/04_successful_sign_in

# Verify profile tab is accessible
- assertVisible:
    id: "profile-tab"

# Take screenshot of authenticated dashboard
- takeScreenshot:
    path: maestro/screenshots/05_authenticated_dashboard
